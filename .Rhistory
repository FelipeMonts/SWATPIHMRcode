}
# function for computing weighted-mean whc within a map unit
mu.mean.whc <- function(i) {
whc <- wtd.mean(i$whc, weights=i$wt) # safely compute wt. mean water storage
data.frame(whc=whc) # return wt. mean water storage
}
# load libraries
library(Hmisc)
library(soilDB)
library(plyr)
library(raster)
library(aqp)
data(gSSURGO.chunk, package='soilDB')
gSSURGO.chunk <- ratify(gSSURGO.chunk, count=TRUE)
rat <- levels(gSSURGO.chunk)[[1]]
in.statement <- format_SQL_in_statement(rat$ID)
q <- paste("SELECT component.mukey, component.cokey, compname, comppct_r, hzdept_r, hzdepb_r, hzname, awc_r
FROM component JOIN chorizon ON component.cokey = chorizon.cokey
AND mukey IN ", in.statement, "ORDER BY mukey, comppct_r DESC, hzdept_r ASC", sep="")
res <- SDA_query(q)
head(res)
q2 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res2 <- SDA_query(q2)
head(res2)
co.whc <- ddply(res, c('mukey', 'cokey'), co.sum.whc)
mu.whc <- ddply(co.whc, 'mukey', mu.mean.whc)
head(mu.whc)
names(mu.whc)[1] <- 'ID'
rat.new <- join(rat, mu.whc, type='left')
levels(gSSURGO.chunk) <- rat.new
r.new <- deratify(gSSURGO.chunk, att='whc')
plot(r.new)
library(plyr)
library(raster)
library(foreign)
r <- raster('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_Felipe\\CNS\\Manhantango\\gssurgo_g_pa\\GSSURGO_PA_TIFF\\MahatangoGSSG1.tif') ;
r <- ratify(r) ;
rat <- levels(r)[[1]] ;
in.statement2 <- format_SQL_in_statement(rat$ID)
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3)
head(res2)
install.packages('raster', dep=TRUE)
install.packages('plyr', dep=TRUE)
install.packages('Hmisc', dep=TRUE)
install.packages('soilDB', dep=TRUE) # stable version from CRAN + dependencies
install.packages("soilDB", repos="http://R-Forge.R-project.org") # most recent copy from r-forge
install.packages("SSOAP", repos = "http://www.omegahat.org/R", type="source") # SSOAP and XMLSchema
install.packages("foreign")
install.packages("httr", dep=TRUE)
install.packages("rgdal", dep = TRUE)
install.packages("raster", dep = TRUE)
install.packages("rgeos", dep = TRUE)
install.packages("raster", dep = TRUE)
install.packages("plyr", dep = TRUE)
install.packages("soilDB", dep = TRUE)
install.packages("soilDB", repos = "http://R-Forge.R-project.org")
install.packages("Hmisc", dep = TRUE)
install.packages("httr", dep = TRUE)
install.packages("rgdal", dep = TRUE)
install.packages("raster", dep = TRUE)
install.packages("soilDB", dep = TRUE)
install.packages("Hmisc", dep = TRUE)
install.packages("rgdal", dep = TRUE)
install.packages("raster", dep = TRUE)
install.packages("soilDB", repos = "http://R-Forge.R-project.org")
install.packages("httr", dep = TRUE)
install.packages("raster", dep = TRUE)
install.packages("soilDB", repos = "http://R-Forge.R-project.org")
install.packages("rgdal", dep = TRUE)
install.packages("httr", dep = TRUE)
install.packages("rgdal", dep = TRUE)
install.packages("httr", dep = TRUE)
##### Working with the Package AQP #######
##### http://ncss-tech.github.io/AQP/soilDB/gSSURGO-SDA.html#####
#### Felipe Montes 2016 09 09 #############
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
# function for computing profile-total water storage
co.sum.whc <- function(i) {
wt <- i$comppct_r[1] # keep the first component pct (they are all the same)
thick <- with(i, hzdepb_r - hzdept_r) # compute horizon thickness
whc <- thick * i$awc_r # compute water storage by horizon
whc.total <- sum(whc, na.rm=TRUE) # sum to get profile water storage
data.frame(whc=whc.total, wt=wt) # return profile water storage and component pct
}
# function for computing weighted-mean whc within a map unit
mu.mean.whc <- function(i) {
whc <- wtd.mean(i$whc, weights=i$wt) # safely compute wt. mean water storage
data.frame(whc=whc) # return wt. mean water storage
}
# load libraries
library(Hmisc)
library(soilDB)
library(plyr)
library(raster)
library(aqp)
library(sp)
library(rgdal)
library(raster)
library(rgeos)
library(lattice)
library(MASS)
# load chunk of gSSURGO
data(gSSURGO.chunk, package='soilDB')
# convert into a raster + RAT
gSSURGO.chunk <- ratify(gSSURGO.chunk, count=TRUE)
# save RAT to new object, will use later
rat <- levels(gSSURGO.chunk)[[1]]
# extract the map unit keys from the RAT, and format for use in an SQL IN-statement
in.statement <- format_SQL_in_statement(rat$ID)
# format query in SQL- raw data are returned
q <- paste("SELECT component.mukey, component.cokey, compname, comppct_r, hzdept_r, hzdepb_r, hzname, awc_r
FROM component JOIN chorizon ON component.cokey = chorizon.cokey
AND mukey IN ", in.statement, "ORDER BY mukey, comppct_r DESC, hzdept_r ASC", sep="")
# now get component and horizon-level data for these map unit keys
res <- SDA_query(q)
head(res)
q2 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res2 <- SDA_query(q2)
head(res2,20)
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
in.statement2 <- format_SQL_in_statement(rat$ID)
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res2) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3, name='name')
plot(res3, name='name', color='om_r')
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res2) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3, name='name', color='dbtenthbar_r')
plot(res3, name='name', color='claytotal_r')
head(res3) ;
plot(res3, name='name', color='dbthirdbar_r')
plot(res3[1:10], name='name', color='dbthirdbar_r')
res3[1]
res3[1:3]
print(res3[1])
print(res3[1:3])
head[res3]
plot(res3[1:3], name='name', color='dbthirdbar_r')
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res3) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3[1:10], name='name', color='dbthirdbar_r')
plot(res3[1:10], name='name', color='frag3to10_r')
install.packages("dplyr")
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
install.packages("dplyr")
# load libraries
library(Hmisc) ;
library(soilDB) ;
library(plyr) ;
library(raster) ;
library(aqp) ;
library(sp) ;
library(rgdal) ;
library(raster) ;
library(rgeos) ;
library(lattice) ;
library(MASS) ;
library(RColorBrewer) ;
library(ggplot2)  ;
#library(tmap) ;
library(dplyr)  ;
library(tidyr)  ;
library(devtools) ;
sessionInfo()
########################## import the raster file with the GSSURGO Data for the watershed in PIHM ####################
Manhatango_GSSURGO<- raster('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_Felipe\\CNS\\Manhantango\\gssurgo_g_pa\\GSSURGO_PA_TIFF\\MahatangoGSSG1.tif') ;
# generate a RAT via raster package functionality
Manhatango_GSSURGO <- ratify(Manhatango_GSSURGO) ;
# extract RAT to a data.frame
MUKEYS <- levels(Manhatango_GSSURGO)[[1]] ;
################################ Query the Soil Data access database with SQL through R #################
# from https://sdmdataaccess.sc.egov.usda.gov/queryhelp.aspx
# and https://sdmdataaccess.sc.egov.usda.gov/documents/ReturningSoilTextureRelatedAttributes.pdf
# --Sample query begins.
# --Note that a pair of dashes denotes the beginning of a comment.
# SELECT
# saversion, saverest, -- attributes from table "sacatalog"
# l.areasymbol, l.areaname, l.lkey, -- attributes from table "legend"
# musym, muname, museq, mu.mukey, -- attributes from table "mapunit"
# comppct_r, compname, localphase, slope_r, c.cokey, -- attributes from table "component"
# hzdept_r, hzdepb_r, ch.chkey, -- attributes from table "chorizon"
# sandtotal_r, silttotal_r, claytotal_r, --total sand, silt and clay fractions from table "chorizon"
# sandvc_r, sandco_r, sandmed_r, sandfine_r, sandvf_r,--sand sub-fractions from table "chorizon"
# texdesc, texture, stratextsflag, chtgrp.rvindicator, -- attributes from table "chtexturegrp"
# texcl, lieutex, -- attributes from table "chtexture"
# texmod -- attributes from table "chtexturemod"
# FROM sacatalog sac
# INNER JOIN legend l ON l.areasymbol = sac.areasymbol AND l.areatypename = 'Non-MLRA Soil Survey Area'
# INNER JOIN mapunit mu ON mu.lkey = l.lkey
# AND mu.mukey IN
# ('107559','107646','107674','107682','107707','107794','107853','107854','107865','107867','107869','107870','107871')
# LEFT OUTER JOIN component c ON c.mukey = mu.mukey
# LEFT OUTER JOIN chorizon ch ON ch.cokey = c.cokey
# LEFT OUTER JOIN chtexturegrp chtgrp ON chtgrp.chkey = ch.chkey
# LEFT OUTER JOIN chtexture cht ON cht.chtgkey = chtgrp.chtgkey
# LEFT OUTER JOIN chtexturemod chtmod ON chtmod.chtkey = cht.chtkey
# --WHERE.
# --ORDER BY l.areaname, museq, comppct_r DESC, compname, hzdept_r -- standard soil report ordering
# --Sample query ends.
# extract the map unit keys from the RAT, and format for use in an SQL IN-statement
in.statement2 <- format_SQL_in_statement(MUKEYS$ID)
# format query in SQL- raw data are returned
Pedon.query<- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r,hzthk_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r, ksat_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
# now get component and horizon-level data for these map unit keys
Pedon.info<- SDA_query(Pedon.query);
head(Pedon.info) ;
# filter components that are the major components of each unit map with the Flag majcompflag=='Yes'
Pedon.info.MajorC<-Pedon.info[which(Pedon.info$majcompflag == 'Yes'),]  ;
head(Pedon.info.MajorC) ;
# check if there are mukeys with more than one dominant component
Pedon.info.MajorC$mukey.factor<-as.factor(Pedon.info.MajorC$mukey) ;
Pedon.info.MajorC$cokey.factor<-as.factor(Pedon.info.MajorC$cokey) ;
Pedon.info.MajorC$mukey_comppct_r<-paste(Pedon.info.MajorC$mukey.factor,Pedon.info.MajorC$comppct_r, sep = "_") ;
# Select major component mukeys that have also the highest component percent comppct_r
head(Pedon.info.MajorC)
Dominant<- aggregate(comppct_r ~ mukey.factor, data=Pedon.info.MajorC, FUN="max" , drop=T, simplify=T) ;
head(Dominant)
Dominant$mukey_comppct_r<-paste(Dominant$mukey.factor,Dominant$comppct_r, sep ="_");
Mukey.Pedon<-Pedon.info.MajorC[Pedon.info.MajorC$mukey_comppct_r %in% Dominant$mukey_comppct_r,]
data(sp4)
depths(sp4) <- id ~ top + bottom
slice(sp4, fm= 0:15 ~ sand + silt + clay + name + ex_Ca_to_Mg)
sessionInfo()
install.packages("aqp")
install.packages("aqp")
install.packages("aqp")
Revised.att
source('C:/Felipe/PIHM-CYCLES/PIHM/PIHM_R_Scripts/PIHM_R_Scripts/PIHMInputsR.R')
source('C:/Felipe/PIHM-CYCLES/PIHM/PIHM_R_Scripts/PIHM_R_Scripts/PIHMInputsR.R')
Windows.Directory<-gsub("\\\\", "/", readClipboard())
Project.Directory<-Windows.Directory
setwd(Project.Directory)    ;
Project.Directory<-Windows.Directory
Project.Directory
.libPaths("C:/Felipe/R_Library/library")
Windows.Directory<-gsub("\\\\", "/", readClipboard())
Project.Directory<-Windows.Directory
setwd(Project.Directory)    ;
DataModel.dir<-"4DataModelLoader" ;
Project<-"MergeVectorLayer000_q30_a200000"
inputfile.name<-(paste(".",DataModel.dir,Project, sep="/")) ;
list.files(paste(".",DataModel.dir, sep="/"))    ;
PIHMMasterFiles<-c(".ATT" , ".CALIB" , ".FORC" , ".GEOL" , ".IBC" , ".INIT" , ".LC" , ".LSM", ".MESH", ".PARA" , ".RIV" , ".SOIL")   ;
mesh.NumEle.NumNode<-read.table(paste0(inputfile.name, ".MESH0"),as.is=T,nrows=1,skip=0, col.names=c("NumEle","NumNode"));
NumEle<-mesh.NumEle.NumNode$NumEle;
NumNode<-mesh.NumEle.NumNode$NumNode;
mesh.Elements<-read.table(paste0(inputfile.name, ".MESH0"),as.is=T,skip=1, nrows=NumEle,col.names=c('Index', 'Node.0', 'Node.1', 'Node.2', 'Nabr.0', 'Nabr.1', 'Nabr.2'));
mesh.Nodes<-read.table(paste0(inputfile.name, ".MESH0"),as.is=T,skip=NumEle+1, nrows=NumNode, col.names=c('Index','X','Y','Zmin','Zmax'));
att<-read.table(paste0(inputfile.name, ".ATT"),as.is=T,col.names=c('Index', 'Soil', 'Geol','LC','IS_IC', 'Snw_IC', 'Srf_IC', 'Ust_IC', 'St_IC', 'Ppt', 'Tmp', 'RH', 'Wnd', 'Rn', 'G', 'VP', 'S', 'mF', 'BC.0', 'BC.1', 'BC.2', 'mP'));
HT_soil<-read.table(file = "../GSSURGO/HansYoust_Soil.txt", as.is=T, header=T) ;
NumSoil<-dim(HT_soil)[1] ;
soil<-HT_soil ;
HT_Geology<-read.table(file = "../GSSURGO/HansYoust_Geology.txt", as.is=T, header=T) ;
geol<-HT_Geology ;
NumRiv<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,nrows=1)[1,1];
riv.elements<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1,nrows=NumRiv,col.names=c('Index', 'FromNode', 'ToNode', 'Down', 'LeftEle', 'RightEle', 'Shape', 'Material', 'IC', 'BC', 'Res'));
NumShape<-shape[1,2];
shape<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv,nrows=1);
riv.shape<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1,nrows=NumShape,col.names=c('Index', 'Depth', 'InterpOrd', 'WidCoeff'));
Material<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape,nrows=1);
NumMat<-Material[1,2];
riv.material<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1,nrows=NumMat,col.names=c('Index', 'n', 'Cwr', 'KsatH','KsatV','Bed'));
IC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat,nrows=1);
NumIC<-IC[1,2];
riv.IC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=NumRiv+1+NumShape+1+1+NumMat+1,nrows=NumIC,col.names=c('Index', 'Value'));
BC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat+1+NumIC,nrows=1);
NumBC<-BC[1,2];
Res<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat+1+NumIC+max(c(NumBC,1)),nrows=1);
METEO.header.1<-read.table(paste0(inputfile.name, ".FORC"),as.is=T,nrows=1)   ;
shape<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv,nrows=1);
NumShape<-shape[1,2];
riv.shape<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1,nrows=NumShape,col.names=c('Index', 'Depth', 'InterpOrd', 'WidCoeff'));
Material<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape,nrows=1);
NumMat<-Material[1,2];
riv.material<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1,nrows=NumMat,col.names=c('Index', 'n', 'Cwr', 'KsatH','KsatV','Bed'));
IC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat,nrows=1);
NumIC<-IC[1,2];
riv.IC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=NumRiv+1+NumShape+1+1+NumMat+1,nrows=NumIC,col.names=c('Index', 'Value'));
BC<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat+1+NumIC,nrows=1);
NumBC<-BC[1,2];
Res<-read.table(paste0(inputfile.name, ".RIV"),as.is=T,skip=1+NumRiv+1+NumShape+1+NumMat+1+NumIC+max(c(NumBC,1)),nrows=1);
METEO.header.1<-read.table(paste0(inputfile.name, ".FORC"),as.is=T,nrows=1)   ;
METEO.header.2<-read.table(paste0(inputfile.name, ".FORC"),as.is=T, nrows=1, skip=1)   ;
METEO.header.1<-read.table(paste0(inputfile.name, ".FORC"),as.is=T,nrows=1)   ;
ibc<-read.table(paste0(inputfile.name,".IBC"),as.is=T, fill=T);
ibc.NumBC1<-ibc[1,1];
ibc.NumBC2<-ibc[1,2];
para<-read.table(paste0(inputfile.name, ".PARA"),as.is=F, fill=T);
para.list<-list(as.vector(para[1, 1:3]),as.vector(para[2, 1:4]),as.vector(para[3, 1:3]),as.vector(para[4, 1:3]),as.vector(para[5, 1:10]),as.vector(para[6, 1:4]),as.vector(para[7, 1:5]),as.vector(para[8, 1:3]),as.vector(para[9, 1:4]),as.vector(para[10, 1:5]),as.vector(para[11, 1:3]),as.vector(para[12, 1:2]));
names(para.list[[1]])<-c("Verbose","Debug","Init_type");
names(para.list[[2]])<-c("PgwD","PsurfD", "PsnowD", "PrivStg");
names(para.list[[3]])<-c("PRech", "PIsD"," PusD");
names(para.list[[4]])<-c("Pet0","Pet1","Pet2");
names(para.list[[5]])<-c("Priv0", "Priv1"," Priv2", "Priv3", "Priv4", "Priv5", "Priv6", "Priv7", "Priv8", "Priv9") ; #, "Priv10");
names(para.list[[6]])<-c("gwDInt", "surfDInt", "snowDint", "rivStgInt");
names(para.list[[7]])<-c("RechInt", "IsDInt", "usDInt", "etInt", "rivFlxInt");
names(para.list[[8]])<-c("UsatMode", "SatMode", "RivMode");
names(para.list[[9]])<-c("Solver", "GSType", "MaxK Delta");
names(para.list[[10]])<-c("AbsTol", "RelTol", "InitStep", "MaxStep", "ETstep");
names(para.list[[11]])<-c("StartTime", "EndTime", "Output");
names(para.list[[12]])<-c("a","b");
init<-read.table(paste0(inputfile.name, ".INIT") ,as.is=F, fill=T);
init.element<-init[seq(1:NumEle),];
names(init.element)<-c("IS" , "Snow" , "Overland" , "UnSat", "Sat");
init.riverSegment<-init[seq(NumEle+1,NumEle+NumRiv),];
names(init.riverSegment)<-c("RiverState", "SatBeneath River");
calib<-read.table(paste0(inputfile.name, ".CALIB") ,as.is=F, fill=T);
calib.list<-list(calib[1,],calib[2,1:3],calib[3,1:3],calib[4,1:2],calib[5,1:3],calib[6,1:2],calib[7,1:3],calib[8,1:4],calib[9,1:2]);
names(calib.list[[1]])<-c("geolKsatH", "geolKsatV", "soilKsatV", "macKsatH", "macKsatV");
names(calib.list[[2]])<-c("infD", "RzD", "macD");
names(calib.list[[3]])<-c("Porosity", "Alpha", "Beta");
names(calib.list[[4]])<-c("vAreaF", "hAreaf");
names(calib.list[[5]])<-c("VegFrac", "Albedo", "Rough");
names(calib.list[[6]])<-c("Precep", "Temp");
names(calib.list[[7]])<-c("Et0", "Et1", "Et2");
names(calib.list[[8]])<-c("rivRough", "rivKsatH", "rivKsatV", "rivBedThickness");
names(calib.list[[9]])<-c("rivDepth", "rivWidCoeff");
dir.create(paste0('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_R_Scripts\\MM_PIHM_inputs\\',Project));
save.image(file=paste0('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_R_Scripts\\MM_PIHM_inputs\\',Project,'\\PIHMInputsR.RData'));
################### Program to use the objects created by the PIHMInputsR program, to generate suitable input format for MM-PIHM
################### Felipe Montes
################### 2015 06 27
#################    Felipe Montes 2017 03 01 Update: Added function to be able to use the directory in which PIHM outputs are saved and read all of the input files into PIHM
################   Added explicit working directory path
################   Add tab separation to the output tables to match the PIHM format
##################  The PIHM inputs in the latest verion of the MM-PIHM model (Prerelease 0.6.0 Alpha git@github.com:PSUmodeling/MM-PIHM.git)  have changed again. The Revised version of MM_PHIMInputsR, MM_PHIMInputsR_V2, will incorporate these changes and the changes that have been programed in the land cover and river file as well
#####################    Felipe Montes
####################     2017 10 30
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/R_Library/library")
setwd('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_R_Scripts\\MM_PIHM_inputs')    ;
Project<-"MergeVectorLayer000_q30_a200000"   ;
load(paste0('./',Project,'/PIHMInputsR.RData'));
RevisedOutputs.dir<-paste0('./',Project,'/') ;
inputfile.name<-paste0(RevisedOutputs.dir,Project) ;
head(mesh.Elements)
MESH.1<-data.frame(c('NUMELE'),NumEle);
head(mesh.Elements)
MESH.1<-data.frame(c('NUMELE'),NumEle);
write.table(MESH.1, file=paste0(inputfile.name, ".MESH"), row.names=F ,col.names=F, quote=F, sep ="\t") ;
MESH.2<-data.frame(c('INDEX') ,c('NODE1') , c('NODE2') , c('NODE3'), c('NABR1') , c('NABR2') ,c('NABR3')) ;
write.table(MESH.2[1,], file=paste0(inputfile.name, ".MESH"), row.names=F , col.names=F, quote=F, sep ="\t", append = T) ;
write.table(mesh.Elements, file=paste0(inputfile.name, ".MESH"), row.names=F , col.names=F, quote=F, sep ="\t", append = T) ;
head(mesh.Nodes)
NumEle
NumNode
NODES.1<-data.frame(c('NUMNODE'),NumNode )   ;
write.table(NODES.1 , file=paste0(inputfile.name, ".MESH") , append=T , row.names=F ,col.names=F, quote=F, sep ="\t") ;
header.mesh.Nodes<-c('INDEX' , 'X' , 'Y' , 'ZMIN' , 'ZMAX');
write.table(mesh.Nodes , file=paste0(inputfile.name, ".MESH") , append=T , row.names=F ,col.names=header.mesh.Nodes, quote=F, sep ="\t") ;
NUMLC<-read.table("./vegprmt.tbl", skip=0, as.is=T, nrows=1) ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2]) ;
Description<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2) ;
Otherprmt.tbl<-read.table("./vegprmt.tbl", skip=NUMLC[1,2]+2, sep="", as.is=T, header=F, nrows=5) ;
NLCD_PIHM.lc<-read.table("./vegprmt.tbl", skip=NUMLC[1,2]+10, sep= ">" , as.is=T, header=F,comment.char="") ;
PIHM.lc<-NLCD_PIHM.lc[,2];
NLCD.lc<-as.integer(sapply(strsplit(NLCD_PIHM.lc[,1], split = " "), "[" , 2)) ;
NLCD_to_PIHM<-merge(data.frame(NLCD.lc, PIHM.lc), vegprmt.tbl, by.x= "PIHM.lc", by.y= "INDEX", all=T) ;
NLCD_to_PIHM[!is.na(NLCD_to_PIHM$NLCD.lc),]
att<-read.table(paste0(Project.Directory,"\\",DataModel.dir,"\\",Project,".att"),as.is=T,col.names=c('Index', 'Soil', 'Geol','LC','IS_IC', 'Snw_IC', 'Srf_IC', 'Ust_IC', 'St_IC', 'Ppt', 'Tmp', 'RH', 'Wnd', 'Rn', 'G', 'VP', 'S', 'mF', 'BC.0', 'BC.1', 'BC.2', 'mP'));
names(att)
att.expanded<-merge(att,NLCD_to_PIHM, by.x="LC", by.y="NLCD.lc", all.x=T ) ;
revised.names<-names(att)   ;
revised.names[4]<- "PIHM.lc" ;
Revised.att<-att.expanded[order(att.expanded$Index),revised.names] ;
names(Revised.att)[4]<-'LC'  ;
Revised.att
Revised.att$LAI<-0  ;
Revised.att
att
Revised.att$LAI<-0  ;
write.table(Revised.att[,c('Index', 'Soil', 'Geol', 'LC','Ppt', 'LAI','S', 'BC.0', 'BC.1', 'BC.2')], file=paste0(inputfile.name, '.ATT') , row.names=F, col.names=c('INDEX' , 'SOIL' , 'GEOL' ,	'LC' ,	'METEO' ,	'LAI',	'SS' ,	'BC0' ,	'BC1' ,	'BC2'), quote=F , sep = "\t" ) ;
Revised.att<-att.expanded[order(att.expanded$Index),revised.names] ;
names(Revised.att)[4]<-'LC'  ;
Revised.att$LAI<-0  ;
Revised.att$METEO<-1  ;
write.table(Revised.att[,c('Index', 'Soil', 'Geol', 'LC','METEO', 'LAI','S', 'BC.0', 'BC.1', 'BC.2')], file=paste0(inputfile.name, '.ATT') , row.names=F, col.names=c('INDEX' , 'SOIL' , 'GEOL' ,	'LC' ,	'METEO' ,	'LAI',	'SS' ,	'BC0' ,	'BC1' ,	'BC2'), quote=F , sep = "\t" ) ;
write.table(data.frame(c('NUMRIV'), 114),file=paste0(inputfile.name, ".RIV"), row.names=F , col.names=F, quote=F, sep= "\t" ) ;
names(riv.elements)<-c( 'INDEX', 'FROM' , 'TO' ,  'DOWN' , 	'LEFT' , 	'RIGHT' , 	'SHAPE' ,	'MATL' ,	'IC' ,	'BC' ,	'RES' )  ;
write.table(riv.elements[,c( 'INDEX', 'FROM' , 'TO' ,  'DOWN' , 	'LEFT' , 	'RIGHT' , 	'SHAPE' ,	'MATL' ,	'BC' ,	'RES' )],file=paste0(inputfile.name, ".RIV"), append=T, row.names=F , quote=F, sep= "\t" ) ;
write.table(data.frame(c('SHAPE'),NumShape),file=paste0(inputfile.name, ".RIV") , row.names=F , col.names=F, quote=F, append=T , sep= "\t") ;
header.riv.Shape<-c('INDEX', 'DPTH' ,  'OINT' ,	'CWID' );
write.table(riv.shape,file=paste0(inputfile.name, ".RIV"), row.names=F , col.names=header.riv.Shape, quote=F, append=T, sep = "\t") ;
write.table(data.frame(c('MATERIAL'),NumMat ),file=paste0(inputfile.name, ".RIV"), row.names=F , col.names=F, quote=F, append=T , sep = "\t") ;
riv.material$ROUGH<-signif(riv.material$n * 86400, 2) ;
riv.material$KH<-signif(riv.material$KsatH / 86400, 2)  ;
riv.material$KV<-signif(riv.material$KsatV / 86400, 2)  ;
header.riv.Material<-c( 'INDEX' , 'ROUGH' ,  'CWR' ,	'KH' ,	'KV' ,	'BEDTHCK');
write.table(riv.material[,c('Index','ROUGH' ,  'Cwr' ,	'KH' ,	'KV' ,	'Bed')],file=paste0(inputfile.name, ".RIV") , row.names=F , col.names=header.riv.Material, quote=F, append=T , sep = "\t") ;
write.table(data.frame(c('BC'),BC[2]),file=paste0(inputfile.name, ".RIV"), row.names=F , col.names=F ,quote=F, append=T, sep = "\t") ;
write.table(data.frame(c('RES'),Res[2]),file=paste0(inputfile.name, ".RIV"), row.names=F , col.names=F, quote=F, append=T , sep = "\t") ;
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
setwd("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/WE-38/WE38_Files_PIHM_Cycles20170208/SWATPIHMRcode") ;
library(Hmisc) ;
library(plyr) ;
library(dplyr)  ;
library(soilDB) ;
library(raster) ;
library(aqp) ;
library(sp) ;
library(rgdal) ;
library(raster) ;
library(rgeos) ;
library(lattice) ;
library(MASS) ;
library(RColorBrewer) ;
library(ggplot2)  ;
library(tidyr)  ;
library(devtools) ;
library(stats)
HansYoust.mesh.info<-ogrInfo("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HY_GSURGO.shp");
HansYoust.GSSURGO<-readOGR("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HY_GSURGO.shp")  ;
str(HansYoust.GSSURGO) ;
plot(HansYoust.GSSURGO);
str(HansYoust.GSSURGO@data) ;
MUKEYS.mode<-as.factor(HansYoust.GSSURGO@data$SSURGO_mod) ;
MUKEYS<-levels(MUKEYS.mode)  ;
in.statement2 <- format_SQL_in_statement(MUKEYS);
Pedon.query<- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r,hzthk_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r, ksat_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
Pedon.info<- SDA_query(Pedon.query);
head(Pedon.info) ;
str(Pedon.info)  ;
Pedon.info.MajorC<-Pedon.info[which(Pedon.info$majcompflag == 'Yes'),]  ;
head(Pedon.info.MajorC) ;
str(Pedon.info.MajorC)  ;
Pedon.info.MajorC$mukey.factor<-as.factor(Pedon.info.MajorC$mukey) ;
Pedon.info.MajorC$cokey.factor<-as.factor(Pedon.info.MajorC$cokey) ;
Pedon.info.MajorC$mukey_comppct_r<-paste(Pedon.info.MajorC$mukey.factor,Pedon.info.MajorC$comppct_r, sep = "_") ;
head(Pedon.info.MajorC)  ;
Dominant<- aggregate(comppct_r ~ mukey.factor, data=Pedon.info.MajorC, FUN="max" , drop=T, simplify=T) ;
head(Dominant)  ;
str(Dominant) ;
Dominant$mukey_comppct_r<-paste(Dominant$mukey.factor,Dominant$comppct_r, sep ="_");
Mukey.Pedon<-Pedon.info.MajorC[Pedon.info.MajorC$mukey_comppct_r %in% Dominant$mukey_comppct_r,]  ;
str(Mukey.Pedon) ;
Mukey.Pedon$mukey_ID<-as.character(Mukey.Pedon$mukey) ;
str(Mukey.Pedon);
depths(Mukey.Pedon)<-mukey_ID ~ hzdept_r + hzdepb_r  ;
str(Mukey.Pedon) ;
plot(Mukey.Pedon, name='hzname',color='dbthirdbar_r')  ;
Mukey.Pedon$soil.depth <-  profileApply(Mukey.Pedon, FUN=max) ;
Mukey.Pedon$hzthickns_r<-Mukey.Pedon$hzdepb_r-Mukey.Pedon$hzdept_r  ;
str(Mukey.Pedon) ;
Mukey.Pedon@horizons<-merge(Mukey.Pedon@horizons, Mukey.Pedon@site, by.x='mukey', by.y='mukey_ID') ;
str(Mukey.Pedon) ;
sliced<-aqp::slice(Mukey.Pedon, fm = 0:max(Mukey.Pedon) ~ sandtotal_r + silttotal_r + claytotal_r + om_r + dbthirdbar_r  + soil.depth + mukey.factor ) ;
plot(sliced, name='hzname', color='om_r') ;
str(sliced) ;
sliced@site$SOIL_MASS<- profileApply(sliced, FUN=function(x) sum(x$dbthirdbar_r, na.rm=T), simplify = T) ;
sliced@site$SANDMASS<- profileApply(sliced, FUN=function(x) sum((x$sandtotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$SILTMASS<- profileApply(sliced, FUN=function(x) sum((x$silttotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$CLAYMASS<- profileApply(sliced, FUN=function(x) sum((x$claytotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$OM_MASS<- profileApply(sliced, FUN=function(x) sum((x$om_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$SAND<-(sliced@site$SANDMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$SILT<-(sliced@site$SILTMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$CLAY<-(sliced@site$CLAYMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$TEXTURE_CHECK<-sliced@site$SAND + sliced@site$SILT + sliced@site$CLAY ;
sliced@site$OM<- (sliced@site$OM_MASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$BULKD<-sliced@site$SOIL_MASS/sliced@site$soil.depth ;
head(sliced@site)
HansYoust_Soil<-sliced@site[, c("mukey_ID", "SILT", "CLAY" , "OM" , "BULKD")] ;
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-signif(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], digits=8)
names(HansYoust_Soil)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
str(HansYoust_Soil) ;
Mukey.deepest<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$hzdepb_r == Mukey.Pedon@horizons$soil.depth,]  ;
str(Mukey.deepest) ;
HansYoust_Geology<-Mukey.deepest [, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(HansYoust_Geology)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
Mukey.deepest.NA<-Mukey.deepest[is.na(Mukey.deepest$claytotal_r),'mukey_ID']  ;
Mukey.deepest.2<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$mukey_ID %in% Mukey.deepest.NA , ];
Mukey.deepest_1<-Mukey.deepest.2[which(Mukey.deepest.2$hzdepb_r == Mukey.deepest.2$soil.depth)-1, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(Mukey.deepest_1)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
HansYoust_Geology[HansYoust_Geology$MUKEY %in% Mukey.deepest.NA, ]<-Mukey.deepest_1  ;
HansYoust_Geology[, c('SILT',  'CLAY',	'OM',	'BD')] <-signif(HansYoust_Geology[, c('SILT',  'CLAY',	'OM',	'BD')], digits=8)
str(HansYoust_Geology) ;
write.table(HansYoust_Soil,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Soil.txt", row.names=F , quote=F, sep = "\t") ;
write.table(HansYoust_Geology,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Geology.txt", row.names=F , quote=F, sep = "\t") ;
HansYoust_Geology
Windows.Directory<-gsub("\\\\", "/", readClipboard())
Windows.Directory
WE38<-read.table(paste0(Windows.Directory,'/WE38.att'),header=T, as.is = T)
head(WE38)
write.table(WE38, file=paste0(Windows.Directory,'/WE38MU.ATT') , row.names=F, quote=F , sep = "\t" ) ;
head(WE38)
WE38$SOIL<-12345678
WE38$GEOL<-12345678
head(WE38)
write.table(WE38, file=paste0(Windows.Directory,'/WE38MU.ATT') , row.names=F, quote=F , sep = "\t" ) ;
